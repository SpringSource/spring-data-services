apply plugin: "base"

allprojects {
  apply plugin: "idea"

  group = "org.springframework.data.services"
  version = "$svcsExporterVersion"

  releaseBuild = version.endsWith("RELEASE")
  snapshotBuild = version.endsWith("SNAPSHOT")

  sourceCompatibility = 6
  targetCompatibility = 6

  configurations.all {
    exclude group: "commons-logging"
    exclude module: "slf4j-log4j12"
    exclude module: "groovy-all", version: "1.8.0-beta-3-SNAPSHOT"
  }

}

subprojects {

  repositories {
    mavenCentral(artifactUrls: [
        "https://maven.springframework.org/release",
        "https://maven.springframework.org/milestone",
        //"https://repository.jboss.org/maven2/",
        //"https://download.java.net/maven/2/"
    ])
    mavenLocal()
  }

  apply plugin: "java"
  apply plugin: "groovy"

  [compileJava, compileTestJava]*.options*.compilerArgs = ["-Xlint:-serial", "-Xlint:-unchecked"]

  dependencies {
    groovy "org.codehaus.groovy:groovy:$groovyVersion"

    // Logging
    compile "org.slf4j:slf4j-api:$slf4jVersion"
    runtime "org.slf4j:jcl-over-slf4j:$slf4jVersion"
    runtime "ch.qos.logback:logback-classic:$logbackVersion"

    // Jackson JSON
    compile "org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion"

    // ROME RSS
    compile "org.rometools:rome-modules:1.0"

    // Spring
    compile "org.springframework:spring-beans:$springVersion"
    compile "org.springframework:spring-context:$springVersion"
    compile "org.springframework:spring-core:$springVersion"
    compile "org.springframework:spring-web:$springVersion"

    // Testing
    testCompile "org.spockframework:spock-core:$spockVersion"
    testCompile "org.spockframework:spock-spring:$spockVersion"
    testCompile "org.hamcrest:hamcrest-all:1.1"
    testCompile "org.springframework:spring-test:$springVersion"
    testRuntime "org.springframework:spring-context-support:$springVersion"

  }

}

task wrapper(type: Wrapper) { gradleVersion = "1.0-milestone-8-20120117033539+0100" }

idea {
  project.ipr.withXml { provider ->
    provider.node.component.find { it.@name == 'VcsDirectoryMappings' }.mapping.@vcs = 'Git'
  }
  module.jdkName = "OpenJDK 1.7"
}
